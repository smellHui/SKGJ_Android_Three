def isDebug = false
if (isDebug.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    resourcePrefix "voice_"
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        resConfigs "zh"
        resourcePrefix "voice_"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ AROUTER_MODULE_NAME : project.getName() ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraint
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.support
    implementation rootProject.ext.dependencies.constraint

    // json 解析.
    implementation rootProject.ext.dependencies.gson
//    数据库
    implementation rootProject.ext.dependencies.litepal

    //rx相关
    implementation rootProject.ext.dependencies.rxandroid
    implementation rootProject.ext.dependencies.rxjava

    implementation rootProject.ext.dependencies.Arouter
    annotationProcessor rootProject.ext.dependencies.Arouter_compiler
    implementation project(':base')
    implementation files('libs/AIUI.jar')
}
