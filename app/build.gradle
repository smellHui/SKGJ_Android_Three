apply plugin: 'com.android.application'

//定义时间
def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        resConfigs "zh"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ AROUTER_MODULE_NAME : project.getName() ]
            }
        }
        ndk {
            abiFilters  'armeabi-v7a'  // 'armeabi-v7a' 'armeabi'
        }
        //解决arcgis问题
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
            /*ndk {
                abiFilters  'armeabi-v7a'
            }*/

        }

        //极光推送
        manifestPlaceholders = [
                JPUSH_PKGNAME : rootProject.ext.android.applicationId,
                JPUSH_APPKEY : "f7968c63c7331fa74ff8c538", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]

    }

    /*flavorDimensions("dev")
    flavorDimensions("prod")
    //由于低版本消耗编译资源，时间较长，只在最后打包上线版本时运行assembleDev即可，编译期间则选择installProdDebug即可
    productFlavors {
        dev {
            // Enable pre-dexing to produce an APK that can be tested on
            // Android 5.0+ without the time-consuming DEX build processes.
            minSdkVersion 21
        }
        prod {
            // The actual minSdkVersion for the production version.
            minSdkVersion rootProject.ext.android.minSdkVersion
        }
    }*/

    //极光推荐关于使用NDK r17时，可能Android Studio会出现以下提示/darwin-x86_64/bin/mips64el-linux-android-strip”
    /*packagingOptions {
        doNotStrip '*//*mips*//*.so'
        doNotStrip '*//*mips64*//*.so'
    }*/

    dataBinding {
        enabled = true
    }
    // 禁止gradle严格检查图片的合法性
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            try {
                storeFile file("./tepia.jks")
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            } catch (ex) {
                throw new Exception(ex.toString())
            }
        }
    }

    /*lintOptions {
        abortOnError false //不在error情况下中断
        disable 'MissingTranslation' //无视字符串缺少本地化的情况
        disable 'ExtraTranslation'//无视多做了本地化的字符串
    }*/

    buildTypes {
        release {
            //混淆
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //其它
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
        debug {
            signingConfig signingConfigs.release
            debuggable true
            minifyEnabled false
        }
    }

    //配置自定义打包名
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "水库管家三个责任人_v${defaultConfig.versionName}_${releaseTime()}.apk"
        }
    }
    repositories {
        flatDir {
            dirs 'libs', '../main/libs'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    configurations.all {
        resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
        resolutionStrategy.force "com.android.support:support-v4:$rootProject.supportLibraryVersion"
        resolutionStrategy.force "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    }
    implementation rootProject.ext.dependencies.appcompat
    implementation rootProject.ext.dependencies.constraint
    implementation rootProject.ext.dependencies.recyclerview
    implementation rootProject.ext.dependencies.support
    implementation rootProject.ext.dependencies.constraint

    implementation rootProject.ext.dependencies.litepal

//    implementation rootProject.ext.dependencies.GaodeLiabrary
    implementation rootProject.ext.dependencies.Pgyer


    implementation rootProject.ext.dependencies.Arouter
    annotationProcessor rootProject.ext.dependencies.Arouter_compiler
    implementation rootProject.ext.dependencies.jpush
    implementation rootProject.ext.dependencies.jcore
    implementation rootProject.ext.dependencies.toast
    //突破64k
    implementation rootProject.ext.dependencies.multidex

    // 总是依赖最新版本
    implementation project(':photopicker')

    implementation project(':base')
    if (!isModule.toBoolean()) {
        implementation project(':main')
        implementation project(':voice')
//        implementation project(':android-pdf-viewer')
//        implementation project(':gaodelibrary')
//        implementation(name: 'gaodelibrary-release', ext: 'aar')
        
        implementation(name: 'gaodelibrary-release-new', ext: 'aar')

        /*implementation(name: 'app-neutral-release', ext: 'aar', {
            exclude group: 'com.android.support', module: 'support-v4'
        })*/

        //好视通会议包
       /* implementation(name: 'shixun-release', ext: 'aar', {
            exclude group: 'com.android.support', module: 'support-v4'
        })*/

    }
}
